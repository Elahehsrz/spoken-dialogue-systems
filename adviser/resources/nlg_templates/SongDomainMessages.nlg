# ---------------NEW RULES - SONGFINDER MESSAGES-------------------------

template welcomemsg(): "Welcome to the conDUCKtor Songfinder chat bot. How may I help you?"
template welcomemsg(help): "Sorry, I cannot understand you. Please tell me again what you are looking for."
template welcomemsg(more) : "Can I help you with anything else?"
template bad() : "Sorry I am a bit confused; please tell me again what you are looking for."
template closingmsg() : "Thank you, goodbye."

# System Requests

template request(artist_name): "Could you tell me the artist of the song you are looking for?"
template request(album_name): "Could you tell me the album on which the song was released?"

# Rules for System Inform

function info(slot, value, track_name)
	if slot = "artist_name": "{track_name} is by the following artist: \"{value}\""
	if slot = "album_name": "{track_name} was released on the following album: \"{value}\""
	if slot = "track_name": "\"{value}\""
	if slot = "artificial_id": "system inform articial id: \"{value}\""
	if slot = "preview_url": "Click on {preview_url}"
	if slot = "danceability": "\"{value}\""


# -------------------------Only Name Slot-----------------------------------#

template inform_byname(track_name)
	"There is a track called {track_name}. What do you want to know about it?"

	#special_case artist_name = "none"
	#	"I’m sorry, I could not find a matching artist."

template inform_byname(artificial_id)
	"MESSAGE ONLY ARTIFICIAL_ID: {artificial_id}"
	if artificial_id = "none": "I’m sorry, I could not find such a track."

template inform_byname(artificial_id, track_name, album_name, artist_name, *slots)
	"There is a track called {track_name} by the artist {artist_name} on the album {album_name}. What do you want to know about it?"

template inform_byname(artificial_id, preview_url)
	"Please click on this preview url: {preview_url}"
	special_case preview_url = "none"
	    "I’m sorry, there is no preview available for this track."

template inform_byname(track_name, artist_name)
	"There is a track called {track_name} by the artist {artist_name}. What do you want to know about it?"

template inform_byname(danceability)
	"Message ONLY DANCEABILITY"

template inform_byname(artificial_id)
	"Message ONLY ARTIFICIAL_ID"


template inform_byname(danceability, artificial_id, track_name)
	"The most danceable track is {track_name}. What would you like to know about this track?"

template inform_byname(valence, artificial_id, track_name)
	"The most positive track is {track_name}. What would you like to know about this track?"

template inform_byname(instrumentalness, artificial_id, track_name)
	"The most instrumental track is {track_name}. What would you like to know about this track?"

# THIS RULE IS AN ATTEMPT FOR AFTER THE USER SELECTED:
template inform_byname(artificial_id, track_name, artist_name, album_name)
	"You have selected the track {track_name}. What would you like to know about this track?"

# General rule for track_name plus potentially more slot values
template inform_byname(track_name, *slots)
	"{for_entry(slots, "info", ", ", " and ", track_name)}."

template inform_alternatives(name)
	"There is another song called {name}. What do you want to know about them?"

	special_case name = "none"
		"I'm sorry, I couldn't find another song with that name."

template inform_byname(artificial_id, *slots)
	if artificial_id = "none"
		"There is no such track which {for_entry(slots, "info", ", ", " and ")}."

#------------------------ Name Slot + Slots----------------------------------#

template inform_byname(name, *slots)
	"The song called {name} {for_entry(slots, "info", ", they ", " and they ", name)}."
	
	special_case name = "none"
		"There is no such superhero who {for_entry(slots, "info", ", ", " and ", name)}."

template inform_alternatives(name, *slots)
	"The superhero {name} also {for_entry(slots, "info", ", they ", " and they ", name)}."
	
	special_case name = "none"
		"There is no other course which also {for_entry(slots, "info", ", ", " and ", name)}."


# ----------------------------System Confirm----------------------------------#

template confirm()
	"Please tell me more about the song you are looking for."
template confirm(name, *slots)
	if name = "none"
		"Let me confirm, you are looking for a song which {for_entry(slots, "info", ", ", " and ", name)}, right?"
template confirm(*slots)
	"Let me confirm, you are looking for a song which {for_entry(slots, "info", ", ", " and ", "none")}, right?"


# ---------------------------System RequestMore------------------------------#

template reqmore()
	"Can I help you with anything else?"

#template reqmore(primary_uniform_color)
#	if primary_uniform_color = "dontcare"
#		"Would you like me to look for a superhero wearing any uniform color?"


# ---------------------------System Select----------------------------------#


template select(danceability, instrumentalness, valence, *track_name)
	"I found several tracks matching your constraints. You can either select one of these track names: {for_entry(track_name, "track_name_or_dontcare_list", "", "")}. Or you can select a track based on danceability or positivity."
	
template select(*slot)
	"Please select one of the following tracks: {for_entry(slot, "track_name_or_dontcare_list", "", "")}."

function track_name_or_dontcare_list(slot, value_list)
	"{for(value_list, "track_name_or_dontcare", ", ", " or ", slot)}"

function track_name_or_dontcare(value, slot)
	"{info(slot, value, "none")}"
	special_case value = "dontcare": "you don't care"

template select(*slot)
	"Sorry, would you like to have a song {for_entry(slot, "info_or_dontcare_list", "", "")}?"

function info_or_dontcare_list(slot, value_list)
	"{for(value_list, "info_or_dontcare", ", ", " or ", slot)}"

function info_or_dontcare(value, slot)
	"which {info(slot, value, "none")}"
	special_case value = "dontcare": "you don't care"

function info_or_dontcare_list(slot, value_list)
	"{for(value_list, "info_or_dontcare", ", ", " or ", slot)}"

function info_or_dontcare(value, slot)
	"which {info(slot, value, "none")}"
	special_case value = "dontcare": "you don't care"

